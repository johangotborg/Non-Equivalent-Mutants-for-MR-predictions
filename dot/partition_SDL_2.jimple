public class partition_SDL_2 extends java.lang.Object
{

    public void <init>()
    {
        partition_SDL_2 r0;

        r0 := @this: partition_SDL_2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int partition_SDL_2_m(java.lang.Double[], java.lang.Integer, java.lang.Integer, java.lang.Integer)
    {
        java.lang.Double[] r0;
        java.lang.Integer r1, r3, r5;
        int $i0, $i1, $i2, $i3, $i6, i8, $i9;
        java.lang.Double $r2, $r4, $r6, $r7, $r8;
        double d0, $d1;
        byte $b7;

        r0 := @parameter0: java.lang.Double[];

        r3 := @parameter1: java.lang.Integer;

        r5 := @parameter2: java.lang.Integer;

        r1 := @parameter3: java.lang.Integer;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $r2 = r0[$i0];

        d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r4 = r0[$i2];

        r0[$i1] = $r4;

        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        i8 = $i3 + 1;

        virtualinvoke r5.<java.lang.Integer: int intValue()>();

        $i6 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        if i8 >= $i6 goto label1;

        $r6 = r0[i8];

        $d1 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $b7 = $d1 cmpl d0;

        if $b7 <= 0 goto label2;

     label1:
        i8 = i8 + -1;

     label2:
        $i9 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r7 = r0[i8];

        r0[$i9] = $r7;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r0[i8] = $r8;

        return i8;
    }
}
