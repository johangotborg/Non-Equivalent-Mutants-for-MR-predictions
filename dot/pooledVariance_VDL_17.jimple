public class pooledVariance_VDL_17 extends java.lang.Object
{

    public void <init>()
    {
        pooledVariance_VDL_17 r0;

        r0 := @this: pooledVariance_VDL_17;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double pooledVariance_VDL_17_m(java.lang.Double[], java.lang.Double[])
    {
        java.lang.Double[] r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        double $d0, $d2, $d5, $d6, $d7, $d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, d27, d28, d29;
        java.lang.Double $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @parameter0: java.lang.Double[];

        r1 := @parameter1: java.lang.Double[];

        i11 = 0;

     label1:
        $i0 = lengthof r0;

        if i11 >= $i0 goto label2;

        $r5 = r0[i11];

        virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        $r6 = r0[i11];

        virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $r7 = r0[i11];

        virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        i11 = i11 + 1;

        goto label1;

     label2:
        $i1 = lengthof r0;

        $d0 = (double) $i1;

        $i2 = lengthof r0;

        $d2 = (double) $i2;

        d27 = 0.0;

        d28 = 0.0;

        i12 = 0;

     label3:
        $i3 = lengthof r1;

        if i12 >= $i3 goto label4;

        $r2 = r1[i12];

        $d16 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        d27 = d27 + $d16;

        $r3 = r1[i12];

        $d17 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $r4 = r1[i12];

        $d18 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $d19 = $d17 * $d18;

        d28 = d28 + $d19;

        i12 = i12 + 1;

        goto label3;

     label4:
        $i4 = lengthof r1;

        $d5 = (double) $i4;

        d29 = d27 / $d5;

        $d6 = d29 * d27;

        $d8 = d28 - $d6;

        $i5 = lengthof r1;

        $d7 = (double) $i5;

        d9 = $d8 / $d7;

        $i6 = lengthof r0;

        $d12 = (double) $i6;

        $i7 = lengthof r1;

        $d10 = (double) $i7;

        $d11 = $d10 * d9;

        $d14 = $d12 + $d11;

        $i9 = lengthof r0;

        $i8 = lengthof r1;

        $i10 = $i9 + $i8;

        $d13 = (double) $i10;

        $d15 = $d14 / $d13;

        return $d15;
    }
}
