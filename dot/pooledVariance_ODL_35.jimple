public class pooledVariance_ODL_35 extends java.lang.Object
{

    public void <init>()
    {
        pooledVariance_ODL_35 r0;

        r0 := @this: pooledVariance_ODL_35;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double pooledVariance_ODL_35_m(java.lang.Double[], java.lang.Double[])
    {
        java.lang.Double[] r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        double $d0, $d1, $d2, $d3, d4, $d5, $d7, $d10, $d11, $d12, $d13, $d18, $d19, $d20, $d21, d22, d23, d24;
        java.lang.Double $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @parameter0: java.lang.Double[];

        r1 := @parameter1: java.lang.Double[];

        d22 = 0.0;

        d23 = 0.0;

        i10 = 0;

     label1:
        $i0 = lengthof r0;

        if i10 >= $i0 goto label2;

        $r5 = r0[i10];

        $d18 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        d22 = d22 + $d18;

        $r6 = r0[i10];

        $d19 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $r7 = r0[i10];

        $d20 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $d21 = $d19 * $d20;

        d23 = d23 + $d21;

        i10 = i10 + 1;

        goto label1;

     label2:
        $i1 = lengthof r0;

        $d0 = (double) $i1;

        d24 = d22 / $d0;

        $d1 = d24 * d22;

        $d3 = d23 - $d1;

        $i2 = lengthof r0;

        $d2 = (double) $i2;

        d4 = $d3 / $d2;

        i11 = 0;

     label3:
        $i3 = lengthof r1;

        if i11 >= $i3 goto label4;

        $r2 = r1[i11];

        virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $r3 = r1[i11];

        virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $r4 = r1[i11];

        virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        i11 = i11 + 1;

        goto label3;

     label4:
        $i4 = lengthof r1;

        $d5 = (double) $i4;

        $i5 = lengthof r1;

        $d7 = (double) $i5;

        $i6 = lengthof r0;

        $d10 = (double) $i6;

        $d12 = $d10 * d4;

        $i8 = lengthof r0;

        $i7 = lengthof r1;

        $i9 = $i8 + $i7;

        $d11 = (double) $i9;

        $d13 = $d12 / $d11;

        return $d13;
    }
}
