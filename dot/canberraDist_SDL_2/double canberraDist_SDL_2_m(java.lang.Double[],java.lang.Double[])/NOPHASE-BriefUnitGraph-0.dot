digraph "double canberraDist_SDL_2_m(java.lang.Double[],java.lang.Double[])" {
    label="double canberraDist_SDL_2_m(java.lang.Double[],java.lang.Double[])";
    node [shape=box];
    "0" [style=filled,fillcolor=gray,label="r0 := @parameter0",];
    "1" [label="r2 := @parameter1",];
    "0"->"1";
    "2" [label="i1 = 0",];
    "1"->"2";
    "3" [label="label1: $i0 = lengthof r0",];
    "2"->"3";
    "4" [label="if i1 >= $i0 goto label2",];
    "3"->"4";
    "5" [label="$r1 = r0[i1]",];
    "4"->"5";
    "19" [style=filled,fillcolor=lightgray,label="label2: return 0.0",];
    "4"->"19";
    "6" [label="$d1 = $r1.doubleValue()",];
    "5"->"6";
    "7" [label="$r3 = r2[i1]",];
    "6"->"7";
    "8" [label="$d2 = $r3.doubleValue()",];
    "7"->"8";
    "9" [label="$d3 = $d1 - $d2",];
    "8"->"9";
    "10" [label="java.lang.Math.abs($d3)",];
    "9"->"10";
    "11" [label="$r4 = r0[i1]",];
    "10"->"11";
    "12" [label="$d5 = $r4.doubleValue()",];
    "11"->"12";
    "13" [label="java.lang.Math.abs($d5)",];
    "12"->"13";
    "14" [label="$r5 = r2[i1]",];
    "13"->"14";
    "15" [label="$d7 = $r5.doubleValue()",];
    "14"->"15";
    "16" [label="java.lang.Math.abs($d7)",];
    "15"->"16";
    "17" [label="i1 = i1 + 1",];
    "16"->"17";
    "18" [label="goto label1",];
    "17"->"18";
    "18"->"3";
}
