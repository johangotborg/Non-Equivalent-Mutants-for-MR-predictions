public class skew_SDL_7 extends java.lang.Object
{

    public void <init>()
    {
        skew_SDL_7 r0;

        r0 := @this: skew_SDL_7;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double skew_SDL_7_m(java.lang.Double[])
    {
        java.lang.Double[] r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        double $d1, $d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, d16, d17, d18;
        java.lang.Double $r1, $r2, $r3;

        r0 := @parameter0: java.lang.Double[];

        d15 = 0.0;

        d16 = 0.0;

        i5 = 0;

     label1:
        $i0 = lengthof r0;

        if i5 >= $i0 goto label2;

        $r1 = r0[i5];

        $d11 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        d15 = d15 + $d11;

        $r2 = r0[i5];

        $d12 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $r3 = r0[i5];

        $d13 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $d14 = $d12 * $d13;

        d16 = d16 + $d14;

        i5 = i5 + 1;

        goto label1;

     label2:
        $i1 = lengthof r0;

        $d1 = (double) $i1;

        d17 = d15 / $d1;

        $d2 = d17 * d15;

        $d4 = d16 - $d2;

        $i2 = lengthof r0;

        $d3 = (double) $i2;

        $d5 = $d4 / $d3;

        d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d5);

        i6 = 0;

     label3:
        $i3 = lengthof r0;

        if i6 >= $i3 goto label4;

        i6 = i6 + 1;

        goto label3;

     label4:
        $i4 = lengthof r0;

        $d7 = (double) $i4;

        d18 = 0.0 / $d7;

        $d8 = d6 * d6;

        $d9 = $d8 * d6;

        $d10 = d18 / $d9;

        return $d10;
    }
}
