public class cosineDistance_SDL_11 extends java.lang.Object
{

    public void <init>()
    {
        cosineDistance_SDL_11 r0;

        r0 := @this: cosineDistance_SDL_11;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double cosineDistance_SDL_11_m(java.lang.Double[], java.lang.Double[])
    {
        java.lang.Double[] r0, r3;
        int $i0, i2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, d12, d13, d14;
        byte $b1;
        java.lang.Double $r1, $r2, $r4, $r5, $r6, $r7;

        r0 := @parameter0: java.lang.Double[];

        r3 := @parameter1: java.lang.Double[];

        d11 = 0.0;

        d12 = 0.0;

        d13 = 0.0;

        i2 = 0;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label2;

        $r1 = r0[i2];

        $d2 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $r2 = r0[i2];

        $d3 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $d4 = $d2 * $d3;

        d12 = d12 + $d4;

        $r4 = r3[i2];

        $d5 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $r5 = r3[i2];

        $d6 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        $d7 = $d5 * $d6;

        d13 = d13 + $d7;

        $r6 = r0[i2];

        $d8 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $r7 = r3[i2];

        $d9 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $d10 = $d8 * $d9;

        d11 = d11 + $d10;

        i2 = i2 + 1;

        goto label1;

     label2:
        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>(d12);

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>(d13);

        d14 = $d0 * $d1;

        $b1 = d14 cmpg d11;

        if $b1 >= 0 goto label3;

     label3:
        return 0.0;
    }
}
