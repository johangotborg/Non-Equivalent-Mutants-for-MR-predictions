public class skew_ODL_15 extends java.lang.Object
{

    public void <init>()
    {
        skew_ODL_15 r0;

        r0 := @this: skew_ODL_15;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double skew_ODL_15_m(java.lang.Double[])
    {
        java.lang.Double[] r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        double $d0, $d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d14, d15, d17, d18;
        java.lang.Double $r1, $r2, $r3, $r4;

        r0 := @parameter0: java.lang.Double[];

        d14 = 0.0;

        d15 = 0.0;

        i5 = 0;

     label1:
        $i0 = lengthof r0;

        if i5 >= $i0 goto label2;

        $r2 = r0[i5];

        $d10 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        d14 = d14 + $d10;

        $r3 = r0[i5];

        virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $r4 = r0[i5];

        virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        i5 = i5 + 1;

        goto label1;

     label2:
        $i1 = lengthof r0;

        $d0 = (double) $i1;

        d17 = d14 / $d0;

        $i2 = lengthof r0;

        $d1 = (double) $i2;

        d2 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);

        i6 = 0;

     label3:
        $i3 = lengthof r0;

        if i6 >= $i3 goto label4;

        $r1 = r0[i6];

        $d7 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $d8 = $d7 - d17;

        $d9 = staticinvoke <java.lang.Math: double pow(double,double)>($d8, 3.0);

        d15 = d15 + $d9;

        i6 = i6 + 1;

        goto label3;

     label4:
        $i4 = lengthof r0;

        $d3 = (double) $i4;

        d18 = d15 / $d3;

        $d4 = d2 * d2;

        $d5 = $d4 * d2;

        $d6 = d18 / $d5;

        return $d6;
    }
}
