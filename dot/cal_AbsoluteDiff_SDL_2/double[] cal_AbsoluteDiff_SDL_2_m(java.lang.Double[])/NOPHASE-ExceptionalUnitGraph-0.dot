digraph "double[] cal_AbsoluteDiff_SDL_2_m(java.lang.Double[])" {
    label="double[] cal_AbsoluteDiff_SDL_2_m(java.lang.Double[])";
    node [shape=box];
    "0" [style=filled,fillcolor=gray,label="l0 := @parameter0",];
    "1" [label="if l0 != null goto label1",];
    "0"->"1" [color=black,];
    "17" [style=invis,label="Esc",];
    "0"->"17" [color=lightgray,label="\l+vmErrors",];
    "2" [style=filled,fillcolor=lightgray,label="return null",];
    "1"->"2" [color=black,];
    "3" [label="label1: $stack3 = lengthof l0",];
    "1"->"3" [color=black,];
    "18" [style=invis,label="Esc",];
    "1"->"18" [color=lightgray,label="\l+vmErrors",];
    "19" [style=invis,label="Esc",];
    "2"->"19" [color=lightgray,label="\l+vmErrors",];
    "4" [label="l1 = newarray (double)[$stack3]",];
    "3"->"4" [color=black,];
    "20" [style=invis,label="Esc",];
    "3"->"20" [color=lightgray,label="\l+vmErrors\l+NullPointer",];
    "5" [label="l2#1 = 0",];
    "4"->"5" [color=black,];
    "21" [style=invis,label="Esc",];
    "4"->"21" [color=lightgray,label="\l+vmErrors\l+NegativeArraySize",];
    "6" [label="label2: $stack9 = l2#1",];
    "5"->"6" [color=black,];
    "22" [style=invis,label="Esc",];
    "5"->"22" [color=lightgray,label="\l+vmErrors",];
    "7" [label="$stack8 = l0",];
    "6"->"7" [color=black,];
    "23" [style=invis,label="Esc",];
    "6"->"23" [color=lightgray,label="\l+vmErrors",];
    "8" [label="$stack4 = lengthof $stack8",];
    "7"->"8" [color=black,];
    "24" [style=invis,label="Esc",];
    "7"->"24" [color=lightgray,label="\l+vmErrors",];
    "9" [label="if $stack9 >= $stack4 goto label3",];
    "8"->"9" [color=black,];
    "25" [style=invis,label="Esc",];
    "8"->"25" [color=lightgray,label="\l+vmErrors\l+NullPointer",];
    "10" [label="$stack5 = l0[l2#1]",];
    "9"->"10" [color=black,];
    "16" [style=filled,fillcolor=lightgray,label="label3: return l1",];
    "9"->"16" [color=black,];
    "26" [style=invis,label="Esc",];
    "9"->"26" [color=lightgray,label="\l+vmErrors",];
    "11" [label="$stack6 = $stack5.doubleValue()",];
    "10"->"11" [color=black,];
    "27" [style=invis,label="Esc",];
    "10"->"27" [color=lightgray,label="\l+vmErrors\l+ArrayIndexOutOfBounds\l+NullPointer",];
    "12" [label="$stack7 = java.lang.Math.abs($stack6)",];
    "11"->"12" [color=black,];
    "28" [style=invis,label="Esc",];
    "11"->"28" [color=lightgray,label="\l+(Throwable)",];
    "13" [label="l1[l2#1] = $stack7",];
    "12"->"13" [color=black,];
    "29" [style=invis,label="Esc",];
    "12"->"29" [color=lightgray,label="\l+(Throwable)",];
    "14" [label="l2#1 = l2#1 + 1",];
    "13"->"14" [color=black,];
    "30" [style=invis,label="Esc",];
    "13"->"30" [color=lightgray,label="\l+vmErrors\l+ArrayIndexOutOfBounds\l+ArrayStore\l+NullPointer",];
    "15" [label="goto label2",];
    "14"->"15" [color=black,];
    "31" [style=invis,label="Esc",];
    "14"->"31" [color=lightgray,label="\l+vmErrors",];
    "15"->"6" [color=black,];
    "32" [style=invis,label="Esc",];
    "15"->"32" [color=lightgray,label="\l+vmErrors",];
    "33" [style=invis,label="Esc",];
    "16"->"33" [color=lightgray,label="\l+vmErrors",];
}
