public class standardize_SDL_2 extends java.lang.Object
{

    public void <init>()
    {
        standardize_SDL_2 r0;

        r0 := @this: standardize_SDL_2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Double[] standardize_SDL_2_m(java.lang.Double[])
    {
        java.lang.Double[] r0;
        int $i0, $i1, $i2, i3;
        double $d0, $d1, $d2, $d3, $d4, $d6, $d7, $d8, $d9, d10, d11, d12;
        java.lang.Double $r1, $r2, $r3;

        r0 := @parameter0: java.lang.Double[];

        d10 = 0.0;

        d11 = 0.0;

        i3 = 0;

     label1:
        $i0 = lengthof r0;

        if i3 >= $i0 goto label2;

        $r1 = r0[i3];

        $d6 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        d10 = d10 + $d6;

        $r2 = r0[i3];

        $d7 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $r3 = r0[i3];

        $d8 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $d9 = $d7 * $d8;

        d11 = d11 + $d9;

        i3 = i3 + 1;

        goto label1;

     label2:
        $i1 = lengthof r0;

        $d0 = (double) $i1;

        d12 = d10 / $d0;

        $d1 = d12 * d10;

        $d3 = d11 - $d1;

        $i2 = lengthof r0;

        $d2 = (double) $i2;

        $d4 = $d3 / $d2;

        staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        return r0;
    }
}
