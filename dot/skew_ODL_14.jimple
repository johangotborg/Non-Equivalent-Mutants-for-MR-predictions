public class skew_ODL_14 extends java.lang.Object
{

    public void <init>()
    {
        skew_ODL_14 r0;

        r0 := @this: skew_ODL_14;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double skew_ODL_14_m(java.lang.Double[])
    {
        java.lang.Double[] r0;
        int $i0, $i1, $i2, $i3, i4, i5;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, d16, d17, d18, d19;
        java.lang.Double $r1, $r2, $r3, $r4;

        r0 := @parameter0: java.lang.Double[];

        d15 = 0.0;

        d16 = 0.0;

        d17 = 0.0;

        i4 = 0;

     label1:
        $i0 = lengthof r0;

        if i4 >= $i0 goto label2;

        $r2 = r0[i4];

        $d11 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        d15 = d15 + $d11;

        $r3 = r0[i4];

        $d12 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $r4 = r0[i4];

        $d13 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $d14 = $d12 * $d13;

        d17 = d17 + $d14;

        i4 = i4 + 1;

        goto label1;

     label2:
        $i1 = lengthof r0;

        $d0 = (double) $i1;

        d18 = d15 / $d0;

        $d1 = d18 * d15;

        $d2 = d17 - $d1;

        d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

        i5 = 0;

     label3:
        $i2 = lengthof r0;

        if i5 >= $i2 goto label4;

        $r1 = r0[i5];

        $d8 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $d9 = $d8 - d18;

        $d10 = staticinvoke <java.lang.Math: double pow(double,double)>($d9, 3.0);

        d16 = d16 + $d10;

        i5 = i5 + 1;

        goto label3;

     label4:
        $i3 = lengthof r0;

        $d4 = (double) $i3;

        d19 = d16 / $d4;

        $d5 = d3 * d3;

        $d6 = $d5 * d3;

        $d7 = d19 / $d6;

        return $d7;
    }
}
