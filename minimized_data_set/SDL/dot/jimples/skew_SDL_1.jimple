public class skew_SDL_1 extends java.lang.Object
{

    public void <init>()
    {
        skew_SDL_1 r0;

        r0 := @this: skew_SDL_1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double skew_SDL_1(java.lang.Double[])
    {
        java.lang.Double[] r0;
        int $i0, $i1, $i2, $i3, i4;
        double $d2, d3, $d4, $d5, $d6, $d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, d17;
        java.lang.Double $r1;

        r0 := @parameter0: java.lang.Double[];

        d16 = 0.0;

        $i0 = lengthof r0;

        $d2 = (double) $i0;

        d3 = 0.0 / $d2;

        $d4 = d3 * 0.0;

        $d6 = 0.0 - $d4;

        $i1 = lengthof r0;

        $d5 = (double) $i1;

        $d7 = $d6 / $d5;

        d8 = staticinvoke <java.lang.Math: double sqrt(double)>($d7);

        i4 = 0;

     label1:
        $i2 = lengthof r0;

        if i4 >= $i2 goto label2;

        $r1 = r0[i4];

        $d13 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $d14 = $d13 - d3;

        $d15 = staticinvoke <java.lang.Math: double pow(double,double)>($d14, 3.0);

        d16 = d16 + $d15;

        i4 = i4 + 1;

        goto label1;

     label2:
        $i3 = lengthof r0;

        $d9 = (double) $i3;

        d17 = d16 / $d9;

        $d10 = d8 * d8;

        $d11 = $d10 * d8;

        $d12 = d17 / $d11;

        return $d12;
    }
}
